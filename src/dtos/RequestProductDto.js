export class RequestProductDto {
    articul;
    capacity;
    ac_output;
    adapter;
    battery_type;
    dc_output;
    model;
    rated_frequency;
    anderson_output;
    battery_rated_frequency;
    construction_type;
    noise_level;
    volume_of_fuel_tank_during_operation;
    starting_system;
    auto_start;
    alternator;
    alternator_winding;
    engine_model;
    engine_type;
    engine_volume;
    fuel_type;
    recommended_oil;
    lubrication_volume;
    overcurrent_protection;
    overvoltage_protection;
    overheating_protection;
    recharge_protection;
    height;
    length;
    width;
    gross_weight;
    output_signal;
    peak_power;
    rated_power;
    sun_charge;
    work_temp;
    car_charge_input;
    type_c_output;
    usb_output;
    price;
    count;

    constructor(model) {
        const size = model.size?.split("x");
        const peak_power = model.peak_power?.split(" ")[0];
        const rated_power = model.rated_power?.split(" ")[0];
        const engine_volume = model.engine_volume?.split(" ")[0];

        this.articul = +model.articul;
        this.capacity = model.capacity;
        this.ac_output = model.ac_output;
        this.adapter = model.adapter;
        this.battery_type = model.battery_type;
        this.dc_output = model.dc_output;
        this.model = model.model;
        this.rated_frequency = model.rated_frequency;
        this.anderson_output = model.anderson_output;
        this.battery_rated_frequency = model.battery_rated_frequency;
        this.construction_type = model.construction_type;
        this.noise_level = model.noise_level;
        this.volume_of_fuel_tank_during_operation = model.volume_of_fuel_tank_during_operation;
        this.starting_system = model.starting_system;
        this.auto_start = model.auto_start;
        this.alternator = model.alternator;
        this.alternator_winding = model.alternator_winding;
        this.engine_model = model.engine_model;
        this.engine_type = model.engine_type;
        this.engine_volume = +engine_volume;
        this.fuel_type = model.fuel_type;
        this.recommended_oil = model.recommended_oil;
        this.lubrication_volume = model.lubrication_volume;
        this.overcurrent_protection = model.overcurrent_protection;
        this.overvoltage_protection = model.overvoltage_protection;
        this.overheating_protection = model.overheating_protection;
        this.recharge_protection = model.recharge_protection;
        this.height = +size[0];
        this.length = +size[1];
        this.width = +size[2];
        this.gross_weight = model.gross_weight;
        this.output_signal = model.output_signal;
        this.peak_power = +peak_power;
        this.rated_power = +rated_power;
        this.sun_charge = model.sun_charge;
        this.work_temp = model.work_temp;
        this.car_charge_input = model.car_charge_input;
        this.type_c_output = model.type_c_output;
        this.usb_output = model.usb_output;
        this.price = +model.price;
        this.count = +model.count;
    }
}